[Core]
# Log file location
LOG_FILE = /var/log/rec.log
# Log file format
LOG_FORMAT=recommendations: %%(levelname)s %%(process)d %%(thread)d %%(name)s - %%(message)s
# Log syslog facility
LOG_SYSLOG_FACILITY = USER
LOG_LEVEL = TRACE

# Event log file location
EVENTLOG_FILE =
# Event log file format
EVENTLOG_FORMAT=recommendations_events: %%(message)s
# Event log syslog facility
EVENTLOG_SYSLOG_FACILITY = LOCAL6
EVENTLOG_SYSLOG_IDENT = recommendations


CORE_LOG_LEVEL = WARNING

RECOMMENDATIONS_DATABASE_CONNECTION_STRING = host='DOCKER_DB_SERVER_NAME' port='DOCKER_DB_SERVER_PORT' user='postgres' dbname='recommends'
LIVE_DATABASE_CONNECTION_STRING = host='DOCKER_DB_SERVER_NAME' port='DOCKER_DB_SERVER_PORT' user='postgres' dbname='podsplice'
BACKUP_DATABASE_CONNECTION_STRING = host='DOCKER_DB_SERVER_NAME' port='DOCKER_DB_SERVER_PORT' user='postgres' dbname='podsplice'

# Increase supported concurrent database connections
BackupOrLiveRO_MAX_CONNECTIONS = 3

# We list this twice as a transitional measure but this is the long term right location
WE7_API_SERVER = http://DOCKER_API_SERVER_NAME:DOCKER_API_SERVER_PORT/api/0.1/
# The line below is a hack !!
WE7_API_SERVER_NAME = DOCKER_API_SERVER_NAME
WE7_API_KEY = we7

WE7_API_SERVICE_DISCOVERY_SERVER=http://DOCKER_API_SERVER_NAME:DOCKER_API_SERVER_PORT
WE7_API_SERVICE_DISCOVERY_SERVER_SECURED=https://DOCKER_API_SERVER_NAME:DOCKER_API_SERVER_SECPORT



# A comma-separated list of memcache server addresses.
CACHE_HOSTS = DOCKER_MEMCACHE_NAME_AND_PORT

# Error reporting by email
EMAIL_SERVER_HOST = localhost
ERROR_EMAIL_TO = dev-errors@we7.com

# Stats reporting.
# If either value is not set (or the port is 0) then reporting is disabled.
# XXX STATS_HOST points to the IP address because we think there's a problem
# resolving DNS within python in recommendations.
STATS_HOST =
STATS_PORT = 8765



[Recommend]
# The string to use to connect to the database, This almost certainly needs to
# be overridden in the local-we7python.cfg file.
DATABASE_CONNECTION_STRING = host='DOCKER_DB_SERVER_NAME' port='DOCKER_DB_SERVER_PORT' user='postgres' dbname='recommends'

# FastCGI server configuration.PI server
WE7_API_SERVER = http://DOCKER_API_SERVER_NAME:DOCKER_API_SERVER_PORT/api/0.1/
WE7_API_KEY = we7

# The key that allows we7 to access lastfm similarity data.
LASTFM_API_KEY = 1279fe89fc27a4ab56d0c7bfb350ecfa

ARTIST_BATCH_SIZE = 100
TRACK_BATCH_SIZE = 100
GENRE_BATCH_SIZE = 100

# The file that contains the recommendation provider selection rules.
# This is searched for in the same places as configuration files.
SELECTOR_FOLDER = /usr/share/python/recommendations-we7/share/recommendations/selectors
RADIO_SELECTOR_CONFIG_FILE = radioselector.json

# This a comma separated list of the names of modules (in the we7.event package)
# containing consumers that are to be loaded to handle events.
EVENT_CONSUMERS = eventlogconsumer

CONSUMER_QUEUE_WARN_SIZE = 1000
CONSUMER_QUEUE_MAX_SIZE = 10000
# Ban Consumers after 20% failure rate
CONSUMER_QUEUE_MAX_ERROR_PERCENT = 75

RADIO_PROVIDER_BAN_COUNT = 35

RADIO_RETURN_SIZE = 50

# Run with 25 threads (and a single process)
FASTCGI_MAXTHREADS = 25

# Event service location
EVENT_CAPTURE_URL = 
http://podalirius.we7.local:2082/event

# New Status Page
STATUS_ENABLED = True

# BlendingA2ASkewedProvider combining ratio of the internal versus GN ArtistToArtist repository
# (1.0 being full INTERNAL, 0.0 being full GN)
BLENDING_INTERNAL_TO_GN_A2A_SIMILARITIES_RATIO = 0.5

[TrackVersion]
DATABASE_CONNECTION_STRING = host='DOCKER_DB_SERVER_NAME' port='DOCKER_DB_SERVER_PORT' user='postgres' dbname='podsplice'

[TheEchoNest]
EN4_API_URL = http://apihmjk.echonest.com/api/v4
API_KEY = HMJKCNGBNXMHSSK9Q
CONSUMER_KEY = 550da371687e2baf4f3c5ff5db78f378
SHARED_SECRET = UQW36Vp6RDyINmGK3gsAow
# Don't raise exceptions on these HTTP errors
HTTP_CODES_BECOME_WARNINGS = 500,503

[TheFilter]
PROVIDER_FETCH_TIMEOUT = 3.0